<?xml version="1.0" encoding="UTF-8"?> <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"> <channel><title>汀汀涔涔</title> <description>This is personnel website of ttcc</description><link>http://localhost:4000/</link> <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/> <pubDate>Sun, 26 Jun 2016 00:08:15 +0800</pubDate> <lastBuildDate>Sun, 26 Jun 2016 00:08:15 +0800</lastBuildDate> <generator>Jekyll v3.1.6</generator> <item><title>Android DragViewHelper</title> <description>&lt;p&gt;Quick note about learning ViewDragHelper from &lt;a href="https://newfivefour.com/android-viewdraghelper-example-tutorial.html"&gt;ViewDragHelper tutorial &lt;/a&gt; and &lt;a href="http://blog.csdn.net/lmj623565791/article/details/46858663"&gt;ViewDragHelper完全解析 自定义ViewGroup神器&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="viewdraghelper"&gt;ViewDragHelper&lt;/h2&gt;&lt;blockquote&gt; &lt;p&gt;&lt;code class="highlighter-rouge"&gt;ViewDragHelper&lt;/code&gt; is in support.v4. It is a utility class for writing custom ViewGroups. It offers a number of useful operations and state tracking for allowing a user to drag and reposition views within their parent ViewGroup.&lt;/p&gt; &lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;So it’s for moving Views in ViewGroup!&lt;/strong&gt;. For example, customize a LinearLayout in which we could drag views.&lt;/p&gt;&lt;h2 id="create-an-instance"&gt;Create an instance&lt;/h2&gt;&lt;p&gt;To create a ViewDragHelper by its factory method:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="n"&gt;ViewDragHelper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;create&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ViewGroup&lt;/span&gt; &lt;span class="n"&gt;forParent&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;sensitivity&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ViewDragHelper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Callback&lt;/span&gt; &lt;span class="n"&gt;cb&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;blockquote&gt; &lt;p&gt;sensitive here means how sensitive the helper should be about detecting the start of a drag. Larger values are more sensitive. 1.0f is normal.&lt;/p&gt; &lt;/blockquote&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="n"&gt;mDraggerHelper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ViewDragHelper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;create&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0f&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ViewDragHelper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Callback&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// some callbacks&lt;/span&gt; &lt;span class="o"&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="create-callbacks"&gt;Create Callbacks&lt;/h2&gt;&lt;p&gt;&lt;a href="https://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html"&gt;ViewDragHelper.Callback&lt;/a&gt; has many public methods to override. Some important ones:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;tryCaptureView(View child, int pointerId)&lt;/code&gt; - Called when user touches a view in the viewgroup. Should return true if the user is permitted to drag the given view with the indicated pointer.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;clampViewPositionVertical(View child, int top, int dy)&lt;/code&gt; - Restrict the motion of the dragged child view along the vertical axis.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;clampViewPositionHorizontal(View child, int left, int dx)&lt;/code&gt; - Restrict the motion of the dragged child view along the horizontal axis.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;getViewVerticalDragRange(View child)&lt;/code&gt; - Returns range of vertical motion in pixels. Views cannot move vertically when it returns 0.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;getViewHorizontalDragRange(View child)&lt;/code&gt; - Returns range of horizontal motion in pixels. Views cannot move horizontally when it returns 0.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;onViewReleased(View child, float xvel, float yvel)&lt;/code&gt; - Called when child view is no longer being actively dragged.&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;The following is an example. All the child views could be dragged in the groupview. But they could only stay inside groupview:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="n"&gt;mDraggerHelper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ViewDragHelper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;create&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0f&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ViewDragHelper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Callback&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;tryCaptureView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;pointerId&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;clampViewPositionHorizontal&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;dx&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;leftBound&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getPaddingLeft&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rightBound&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getWidth&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getWidth&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;getPaddingRight&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Views could only stay inside groupview horizontally&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;min&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;leftBound&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="n"&gt;rightBound&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;clampViewPositionVertical&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;dy&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;topBound&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getPaddingTop&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;bottomBound&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getHeight&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getHeight&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;getPaddingBottom&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Views could only stay inside groupview vertically&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;min&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;topBound&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="n"&gt;bottomBound&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="o"&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="detect-touch-event"&gt;Detect Touch Event&lt;/h2&gt;&lt;p&gt;Those above ViewDragHelper.Callbacks will be called when ViewGroup detects touch event.&lt;/p&gt;&lt;p&gt;It needs to override two functions in ViewGroup:&lt;/p&gt;&lt;ol&gt; &lt;li&gt;&lt;strong&gt;&lt;code class="highlighter-rouge"&gt;onInterceptTouchEvent()&lt;/code&gt;&lt;/strong&gt; - In it, using &lt;code class="highlighter-rouge"&gt;mDraggerView.shouldInterceptTouchEvent(event)&lt;/code&gt; to decide if it should intercept this touch event or not.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;&lt;code class="highlighter-rouge"&gt;onTouchEvent()&lt;/code&gt;&lt;/strong&gt; - In it, using &lt;code class="highlighter-rouge"&gt;mDraggerView.processTouchEvent(event)&lt;/code&gt; to process the motion event.&lt;/li&gt; &lt;/ol&gt;&lt;blockquote&gt; &lt;p&gt;&lt;code class="highlighter-rouge"&gt;onInterceptTouchEvent()&lt;/code&gt; is called whenever a touch event is detected on the surface of a ViewGroup, including on the surface of its children. If it returns true, the MotionEvent is intercepted, meaning it will be not be passed on to the child, but rather to &lt;code class="highlighter-rouge"&gt;onTouchEvent()&lt;/code&gt; method of ViewGroup.&lt;/p&gt; &lt;/blockquote&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;onInterceptTouchEvent&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MotionEvent&lt;/span&gt; &lt;span class="n"&gt;ev&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;mDragHelper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shouldInterceptTouchEvent&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ev&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;onTouchEvent&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MotionEvent&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;mDragHelper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;processTouchEvent&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="ref"&gt;Ref&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;&lt;a href="http://blog.csdn.net/lmj623565791/article/details/46858663"&gt;ViewDragHelper完全解析 自定义ViewGroup神器&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://newfivefour.com/android-viewdraghelper-example-tutorial.html"&gt;ViewDragHelper tutorial&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://flavienlaurent.com/blog/2013/08/28/each-navigation-drawer-hides-a-viewdraghelper/"&gt;Each Navigation Drawer Hides a ViewDragHelper&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; </description> <pubDate>Sun, 29 May 2016 00:00:00 +0800</pubDate><link>http://localhost:4000/android/Android-DragViewHelper/</link> <guid isPermaLink="true">http://localhost:4000/android/Android-DragViewHelper/</guid> <category>android</category> <category>android</category> </item> <item><title>Android GestureDetector</title> <description>&lt;p&gt;Quick note about learning &lt;code class="highlighter-rouge"&gt;GestureDetector&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;ScaleGestureDetector&lt;/code&gt;.&lt;/p&gt;&lt;h2 id="gesturedetector"&gt;GestureDetector&lt;/h2&gt;&lt;p&gt;Android provides &lt;code class="highlighter-rouge"&gt;GestureDetector&lt;/code&gt; class for detecting common gestures.&lt;/p&gt;&lt;h3 id="steps"&gt;Steps&lt;/h3&gt;&lt;ol&gt; &lt;li&gt;Create an instance of &lt;code class="highlighter-rouge"&gt;GestureDetector&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Override View or Activity’s &lt;code class="highlighter-rouge"&gt;onTouchEvent(MotionEvent event)&lt;/code&gt; and pass event to &lt;code class="highlighter-rouge"&gt;GestureDetector.onTouchEvent(event)&lt;/code&gt;;&lt;/li&gt; &lt;li&gt;Implement &lt;code class="highlighter-rouge"&gt;GestureDetector.OnGestureListener&lt;/code&gt; callbacks for gestures.&lt;/li&gt; &lt;li&gt;Implement &lt;code class="highlighter-rouge"&gt;GestureDetector.OnDoubleTapListener&lt;/code&gt; callbacks for click gestures.&lt;/li&gt; &lt;li&gt;Or implement &lt;code class="highlighter-rouge"&gt;GestureDetector.SimpleOnGestureListener&lt;/code&gt; callbacks if process only a few gestures above.&lt;/li&gt; &lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Suggest to use &lt;code class="highlighter-rouge"&gt;SimpleOnGestureListener&lt;/code&gt; which only needs to implement the gestures we need&lt;/strong&gt;.&lt;/p&gt;&lt;h3 id="gestures"&gt;Gestures&lt;/h3&gt;&lt;p&gt;Check &lt;a href="https://developer.android.com/reference/android/view/GestureDetector.SimpleOnGestureListener.html"&gt;SimpleOnGestureListener&lt;/a&gt; Api page for the full list of gestures.&lt;/p&gt;&lt;p&gt;The following table shows the gestures of both &lt;code class="highlighter-rouge"&gt;OnGestureListener&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;OnDoubleTapListener&lt;/code&gt;. The first six are from &lt;code class="highlighter-rouge"&gt;OnGestureListener&lt;/code&gt; and the last three are from &lt;code class="highlighter-rouge"&gt;OnDoubleTapListener&lt;/code&gt;. But &lt;code class="highlighter-rouge"&gt;SimpleOnGestureListener&lt;/code&gt; have all of them.&lt;/p&gt;&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Gestures&lt;/th&gt; &lt;th style="text-align: left"&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;onDown()&lt;/td&gt; &lt;td style="text-align: left"&gt;Notified when a tap occurs with the down MotionEvent that triggered it.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;onFling()&lt;/td&gt; &lt;td style="text-align: left"&gt;Notified of a fling event when it occurs with the initial on down MotionEvent and the matching up MotionEvent.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;onLongPress()&lt;/td&gt; &lt;td style="text-align: left"&gt;Notified when a long press occurs with the initial on down MotionEvent that trigged it.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;onScroll()&lt;/td&gt; &lt;td style="text-align: left"&gt;Notified when a scroll occurs with the initial on down MotionEvent and the current move MotionEvent.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;onShowPress()&lt;/td&gt; &lt;td style="text-align: left"&gt;The user has performed a down MotionEvent and not performed a move or up yet.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;onSingleTapUp()&lt;/td&gt; &lt;td style="text-align: left"&gt;Notified when a tap occurs with the up MotionEvent that triggered it.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;onDoubleTap()&lt;/td&gt; &lt;td style="text-align: left"&gt;Notified when a double-tap occurs.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;onDoubleTapEvent()&lt;/td&gt; &lt;td style="text-align: left"&gt;Notified when an event within a double-tap gesture occurs, including the down, move, and up events.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;onSingleTapConfirmed()&lt;/td&gt; &lt;td style="text-align: left"&gt;Notified when a single-tap occurs. Unlike &lt;code class="highlighter-rouge"&gt;onSingleTapUp()&lt;/code&gt;, it will only be called after the detector is confident that the user’s first tap is not followed by a second tap leading to a double-tap gesture.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;&lt;h3 id="example"&gt;Example&lt;/h3&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainActivity&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Activity&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;GestureDetectorCompat&lt;/span&gt; &lt;span class="n"&gt;mDetector&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onCreate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;setContentView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;activity_main&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// Create an instance of GestureDetector&lt;/span&gt; &lt;span class="n"&gt;mDetector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;GestureDetectorCompat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MyGestureListener&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;onTouchEvent&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MotionEvent&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;&lt;span class="c1"&gt;// Pass event to GestureDetector.onTouchEvent(event)&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;mDetector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onTouchEvent&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onTouchEvent&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyGestureListener&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;GestureDetector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SimpleOnGestureListener&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;DEBUG_TAG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Gestures"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;onDown&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MotionEvent&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DEBUG_TAG&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Down"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;onFling&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MotionEvent&lt;/span&gt; &lt;span class="n"&gt;event1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MotionEvent&lt;/span&gt; &lt;span class="n"&gt;event2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;velocityX&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;velocityY&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DEBUG_TAG&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Fling"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="scalegesturedetector"&gt;ScaleGestureDetector&lt;/h2&gt;&lt;p&gt;It detects scaling transformation gestures or called pinch gestures for scaling views. (Two fingers)&lt;/p&gt;&lt;h3 id="steps-1"&gt;Steps&lt;/h3&gt;&lt;ol&gt; &lt;li&gt;Create an instance of &lt;code class="highlighter-rouge"&gt;ScaleGestureDetector&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Override View or Activity’s &lt;code class="highlighter-rouge"&gt;onTouchEvent(MotionEvent event)&lt;/code&gt; and pass event to &lt;code class="highlighter-rouge"&gt;ScaleGestureDetector.onTouchEvent(event)&lt;/code&gt;;&lt;/li&gt; &lt;li&gt;Implement &lt;code class="highlighter-rouge"&gt;ScaleGestureDetector.OnScaleGestureListener &lt;/code&gt; callbacks for gestures.&lt;/li&gt; &lt;li&gt;Or implement &lt;code class="highlighter-rouge"&gt;ScaleGestureDetector.SimpleOnScaleGestureListener()&lt;/code&gt; callbacks if process only a few gestures above.&lt;/li&gt; &lt;/ol&gt;&lt;h3 id="gestures-1"&gt;Gestures&lt;/h3&gt;&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Gestures&lt;/th&gt; &lt;th style="text-align: left"&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;onScaleBegin()&lt;/td&gt; &lt;td style="text-align: left"&gt;Responds to the beginning of a scaling gesture.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;onScale()&lt;/td&gt; &lt;td style="text-align: left"&gt;Responds to scaling events for a gesture in progress.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;onScaleEnd()&lt;/td&gt; &lt;td style="text-align: left"&gt;Responds to the end of a scale gesture.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;&lt;h3 id="example-1"&gt;Example&lt;/h3&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainActivity&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Activity&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;ImageView&lt;/span&gt; &lt;span class="n"&gt;imageView&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;ScaleGestureDetector&lt;/span&gt; &lt;span class="n"&gt;detector&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onCreate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;setContentView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;activity_main&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="n"&gt;imageView&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="n"&gt;ImageView&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;imageView&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;detector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ScaleGestureDetector&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ScaleListener&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;onTouchEvent&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MotionEvent&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;detector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onTouchEvent&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onTouchEvent&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ScaleListener&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;ScaleGestureDetector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SimpleOnScaleGestureListener&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;onScaleBegin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;onScaleEnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;onScaleBegin&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ScaleGestureDetector&lt;/span&gt; &lt;span class="n"&gt;detector&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Toast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;makeText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getApplicationContext&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;"Scale Begin"&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Toast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;show&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;onScaleBegin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;onScale&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ScaleGestureDetector&lt;/span&gt; &lt;span class="n"&gt;detector&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="n"&gt;detector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getScaleFactor&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;&lt;span class="n"&gt;imageView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setScaleX&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;imageView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setScaleY&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onScaleEnd&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ScaleGestureDetector&lt;/span&gt; &lt;span class="n"&gt;detector&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Toast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;makeText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getApplicationContext&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;"Scale Ended"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Toast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;show&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;&lt;span class="n"&gt;onScaleEnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onScaleEnd&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;onScaleBegin&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt; &lt;span class="n"&gt;Toast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;makeText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getApplicationContext&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;"Scaled Up by a factor of "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;valueOf&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;onScaleEnd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;onScaleBegin&lt;/span&gt; &lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="n"&gt;Toast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;show&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onScaleEnd&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;onScaleBegin&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt; &lt;span class="n"&gt;Toast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;makeText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getApplicationContext&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;"Scaled Down by a factor of "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;valueOf&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="n"&gt;onScaleBegin&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;onScaleEnd&lt;/span&gt; &lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="n"&gt;Toast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;show&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onScaleEnd&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;detector&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="ref"&gt;Ref&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;&lt;a href="https://developer.android.com/training/gestures/index.html"&gt;Using Touch Gestures&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.sitepoint.com/android-gestures-and-touch-mechanics/"&gt;Android Gestures and Touch Mechanics&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; </description> <pubDate>Fri, 27 May 2016 00:00:00 +0800</pubDate><link>http://localhost:4000/android/Android-GestureDetector/</link> <guid isPermaLink="true">http://localhost:4000/android/Android-GestureDetector/</guid> <category>android</category> <category>android</category> </item> <item><title>Android Shape Drawable</title> <description>&lt;p&gt;Quick note about learning Android Shape Drawable. It is an XML file defining a geometric shape, including colors and gradients.&lt;/p&gt;&lt;h2 id="shape"&gt;Shape&lt;/h2&gt;&lt;p&gt;Four shapes available:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;rectangle (By default)&lt;/li&gt; &lt;li&gt;oval&lt;/li&gt; &lt;li&gt;line&lt;/li&gt; &lt;li&gt;ring&lt;/li&gt; &lt;/ul&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;shape&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt; &lt;span class="na"&gt;android:shape=&lt;/span&gt;&lt;span class="s"&gt;[&lt;/span&gt; &lt;span class="err"&gt;rectangle&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="err"&gt;oval&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="err"&gt;line&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="err"&gt;ring&lt;/span&gt; &lt;span class="err"&gt;]&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/shape&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h3 id="addtional-attributes-for-ring"&gt;Addtional attributes for ring&lt;/h3&gt;&lt;p&gt;With &lt;code class="highlighter-rouge"&gt;ring&lt;/code&gt;, we could have following additonal attributes:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:innerRadius&lt;/code&gt; - Dimension. Radius for the inner part of the ring&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:innerRadiusRatio&lt;/code&gt; - Radius for the inner part of the ring, expressed as a ratio of the ring’s width. Overridden by &lt;code class="highlighter-rouge"&gt;android:innerRadius&lt;/code&gt;. Default value is 9.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:thickness&lt;/code&gt; - Dimension. Thickness of the ring.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:thicknessRatio&lt;/code&gt; - Thickness of the ring, expressed as a ratio of the ring’s width. Overridden by &lt;code class="highlighter-rouge"&gt;android:innerRadius&lt;/code&gt;. Default value is 3.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;ndroid:useLevel&lt;/code&gt; - Boolean. “true” if this is used as a &lt;code class="highlighter-rouge"&gt;LevelListDrawable&lt;/code&gt;. This should normally be “false” or your shape may not appear.&lt;/li&gt; &lt;/ul&gt;&lt;h2 id="properties-of-shape"&gt;Properties of shape&lt;/h2&gt;&lt;p&gt;Then inside &lt;code class="highlighter-rouge"&gt;&amp;lt;shape&amp;gt;&lt;/code&gt;, we could define the following properties:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;&amp;lt;corners&amp;gt;&lt;/code&gt; (Only with rectangle)&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;&amp;lt;padding&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;&amp;lt;solid&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;&amp;lt;stroke&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;&amp;lt;size&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;&amp;lt;padding&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;h3 id="corners"&gt;corners&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Creates rounded corners for the shape. Applies only when the shape is a rectangle.&lt;/strong&gt;&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;corners&lt;/span&gt; &lt;span class="na"&gt;android:radius=&lt;/span&gt;&lt;span class="s"&gt;"1dp"&lt;/span&gt; &lt;span class="na"&gt;android:topLeftRadius=&lt;/span&gt;&lt;span class="s"&gt;"Dimension"&lt;/span&gt; &lt;span class="na"&gt;android:topRightRadius=&lt;/span&gt;&lt;span class="s"&gt;"Dimension"&lt;/span&gt; &lt;span class="na"&gt;android:bottomLeftRadius=&lt;/span&gt;&lt;span class="s"&gt;"Dimension"&lt;/span&gt; &lt;span class="na"&gt;android:bottomRightRadius=&lt;/span&gt;&lt;span class="s"&gt;"Dimension"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;&lt;code class="highlighter-rouge"&gt;android:radius&lt;/code&gt; for all corners. Overridden for each corner by the other four attributes.&lt;/p&gt;&lt;h3 id="gradient"&gt;gradient&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Specifies a gradient color for the shape.&lt;/strong&gt;&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;gradient&lt;/span&gt; &lt;span class="na"&gt;android:angle=&lt;/span&gt;&lt;span class="s"&gt;"Integer"&lt;/span&gt; &lt;span class="na"&gt;android:centerX=&lt;/span&gt;&lt;span class="s"&gt;"Float"&lt;/span&gt; &lt;span class="na"&gt;android:centerY=&lt;/span&gt;&lt;span class="s"&gt;"Float"&lt;/span&gt; &lt;span class="na"&gt;android:startColor=&lt;/span&gt;&lt;span class="s"&gt;"Color"&lt;/span&gt; &lt;span class="na"&gt;android:centerColor=&lt;/span&gt;&lt;span class="s"&gt;"Color"&lt;/span&gt; &lt;span class="na"&gt;android:endColor=&lt;/span&gt;&lt;span class="s"&gt;"Color"&lt;/span&gt; &lt;span class="na"&gt;android:type=&lt;/span&gt;&lt;span class="s"&gt;[&lt;/span&gt; &lt;span class="err"&gt;linear&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="err"&gt;radial&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="err"&gt;sweep&lt;/span&gt; &lt;span class="err"&gt;]&lt;/span&gt; &lt;span class="na"&gt;android:gradientRadius=&lt;/span&gt;&lt;span class="s"&gt;"Float"&lt;/span&gt; &lt;span class="na"&gt;android:useLevel=&lt;/span&gt;&lt;span class="s"&gt;"Boolean"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;ul&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:angle&lt;/code&gt; - Angle for the gradient, in degrees. 0 is left to right, 90 is bottom to top. It must be a multiple of 45. Default is 0.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:centerX&lt;/code&gt; - The relative X-position for the center of the gradient (0 - 1.0).&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:centerY&lt;/code&gt; - The relative Y-position for the center of the gradient (0 - 1.0).&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:startColor&lt;/code&gt; - Starting color&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:centerColor&lt;/code&gt; - Optional color that comes between the start and end colors&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:endColor&lt;/code&gt; - Ending color&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:gradientRadius&lt;/code&gt; - Radius for the gradient. Only applied when &lt;code class="highlighter-rouge"&gt;android:type="radial"&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:useLevel&lt;/code&gt; - Boolean. “true” if this is used as a LevelListDrawable.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:type&lt;/code&gt; - Type of gradient pattern to apply.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;linear&lt;/code&gt; - A linear gradient. By default.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;radial&lt;/code&gt; - A radial gradient. The start color is the center color.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;sweep&lt;/code&gt; - A sweeping line gradient.&lt;/li&gt; &lt;/ul&gt;&lt;h3 id="solid"&gt;solid&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;A solid color to fill the shape.&lt;/strong&gt;&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;solid&lt;/span&gt; &lt;span class="na"&gt;android:color=&lt;/span&gt;&lt;span class="s"&gt;"Color"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h3 id="stroke"&gt;stroke&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;A stroke line for the shape.&lt;/strong&gt; Could be considered as border of the shape.&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;stroke&lt;/span&gt; &lt;span class="na"&gt;android:width=&lt;/span&gt;&lt;span class="s"&gt;"Dimension"&lt;/span&gt; &lt;span class="na"&gt;android:color=&lt;/span&gt;&lt;span class="s"&gt;"Color"&lt;/span&gt; &lt;span class="na"&gt;android:dashWidth=&lt;/span&gt;&lt;span class="s"&gt;"Dimension"&lt;/span&gt; &lt;span class="na"&gt;android:dashGap=&lt;/span&gt;&lt;span class="s"&gt;"Dimension"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;ul&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:dashWidth&lt;/code&gt; - Size of each dash line. Only valid if &lt;code class="highlighter-rouge"&gt;android:dashGap&lt;/code&gt; is set.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:dashGap&lt;/code&gt; - Distance between line dashes. Only valid if &lt;code class="highlighter-rouge"&gt;android:dashWidth&lt;/code&gt; is set.&lt;/li&gt; &lt;/ul&gt;&lt;h3 id="padding"&gt;padding&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Padding to apply to the containing View element&lt;/strong&gt; (this pads the position of the View content, not the shape).&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;padding&lt;/span&gt; &lt;span class="na"&gt;android:left=&lt;/span&gt;&lt;span class="s"&gt;"Dimension"&lt;/span&gt; &lt;span class="na"&gt;android:top=&lt;/span&gt;&lt;span class="s"&gt;"Dimension"&lt;/span&gt; &lt;span class="na"&gt;android:right=&lt;/span&gt;&lt;span class="s"&gt;"Dimension"&lt;/span&gt; &lt;span class="na"&gt;android:bottom=&lt;/span&gt;&lt;span class="s"&gt;"Dimension"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h3 id="size"&gt;size&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Size of the shape.&lt;/strong&gt;&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;size&lt;/span&gt; &lt;span class="na"&gt;android:width=&lt;/span&gt;&lt;span class="s"&gt;"Dimension"&lt;/span&gt; &lt;span class="na"&gt;android:height=&lt;/span&gt;&lt;span class="s"&gt;"Dimension"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="file-location"&gt;File Location&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;res/drawable/filename.xml&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The filename is used as the resource ID.&lt;/p&gt;&lt;h2 id="resource-reference"&gt;Resource reference&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;In Java: &lt;strong&gt;R.drawable.filename&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;In XML: &lt;strong&gt;@[package:]drawable/filename&lt;/strong&gt;&lt;/li&gt; &lt;/ul&gt;&lt;h2 id="refs"&gt;Refs&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;&lt;a href="https://developer.android.com/guide/topics/resources/drawable-resource.html"&gt;Android Developer Drawable-Resource&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.cnblogs.com/cyanfei/archive/2012/07/27/2612023.html"&gt;Android shape的使用&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; </description> <pubDate>Wed, 25 May 2016 00:00:00 +0800</pubDate><link>http://localhost:4000/android/Android-Shape/</link> <guid isPermaLink="true">http://localhost:4000/android/Android-Shape/</guid> <category>android</category> <category>android</category> </item> <item><title>Android ListActivity</title> <description>&lt;p&gt;&lt;code class="highlighter-rouge"&gt;ListActivity&lt;/code&gt; is to simplify the handling of &lt;code class="highlighter-rouge"&gt;ListView&lt;/code&gt;. It extends &lt;code class="highlighter-rouge"&gt;Activity&lt;/code&gt; and provides simplified handling of lists.&lt;/p&gt;&lt;h2 id="difference-with-activity"&gt;Difference with &lt;code class="highlighter-rouge"&gt;Activity&lt;/code&gt;&lt;/h2&gt;&lt;ol&gt; &lt;li&gt;Override &lt;code class="highlighter-rouge"&gt;onListItemClick()&lt;/code&gt; method to add item click listener. With &lt;code class="highlighter-rouge"&gt;Activity&lt;/code&gt;, we need to create a separate listener with &lt;code class="highlighter-rouge"&gt;OnClickListener&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;No need to use &lt;code class="highlighter-rouge"&gt;findViewById()&lt;/code&gt; to find listview in layout resource.&lt;/li&gt; &lt;li&gt;Could show a special view to replace list view automatically when there is no data in list.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;setListAdapter()&lt;/code&gt; to set adapter instead of calling &lt;code class="highlighter-rouge"&gt;ListView.setAdaper()&lt;/code&gt;.&lt;/li&gt; &lt;/ol&gt;&lt;blockquote&gt; &lt;p&gt;Please inform me if any expert know more about it.&lt;/p&gt; &lt;/blockquote&gt;&lt;h2 id="example"&gt;Example&lt;/h2&gt;&lt;p&gt;Points to pay attention:&lt;/p&gt;&lt;ol&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;ListView&lt;/code&gt; must set id &lt;code class="highlighter-rouge"&gt;@android:id/list&lt;/code&gt;. So &lt;code class="highlighter-rouge"&gt;ListActivity&lt;/code&gt; could find it automatically.&lt;/li&gt; &lt;li&gt;The view to show when there is no data in the list must set id &lt;code class="highlighter-rouge"&gt;android:id/empty&lt;/code&gt;.&lt;/li&gt; &lt;/ol&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt; &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt; &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt; &lt;span class="na"&gt;android:orientation=&lt;/span&gt;&lt;span class="s"&gt;"vertical"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;ListView&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@android:id/list"&lt;/span&gt; &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt; &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"0dp"&lt;/span&gt; &lt;span class="na"&gt;android:background=&lt;/span&gt;&lt;span class="s"&gt;"#00FF00"&lt;/span&gt; &lt;span class="na"&gt;android:layout_weight=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="na"&gt;android:drawSelectorOnTop=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;TextView&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@android:id/empty"&lt;/span&gt; &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt; &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt; &lt;span class="na"&gt;android:background=&lt;/span&gt;&lt;span class="s"&gt;"#FF0000"&lt;/span&gt; &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"No data"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;Then extend &lt;code class="highlighter-rouge"&gt;ListActivity&lt;/code&gt; and override &lt;code class="highlighter-rouge"&gt;onListItemClick()&lt;/code&gt; to add item listener&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainActivity&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;ListActivity&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onCreate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;setContentView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;activity_main&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"b"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"c"&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;&lt;span class="c1"&gt;// Set data null to test no data textview&lt;/span&gt; &lt;span class="c1"&gt;// String[] data = {};&lt;/span&gt;&lt;span class="n"&gt;ArrayAdapter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;adapter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArrayAdapter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;simple_list_item_1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// Add adapter &lt;/span&gt; &lt;span class="n"&gt;setListAdapter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;adapter&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onListItemClick&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ListView&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onListItemClick&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="n"&gt;Toast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;makeText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Position:"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" id:"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Toast&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;show&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="refs"&gt;Refs&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;&lt;a href="https://developer.android.com/reference/android/app/ListActivity.html"&gt;Android Developer ListActivity&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://stackoverflow.com/questions/11969386what-are-the-differences-between-extending-activity-and-extending-listactivity"&gt;Differences between extending Activity and extending ListActivity?&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; </description> <pubDate>Mon, 23 May 2016 00:00:00 +0800</pubDate><link>http://localhost:4000/android/Android-ListActivity/</link> <guid isPermaLink="true">http://localhost:4000/android/Android-ListActivity/</guid> <category>android</category> <category>android</category> </item> <item><title>Android Fragment</title> <description>&lt;p&gt;Quick note about learning &lt;a href="https://developer.android.com/training/basics/fragments/index.html"&gt;Building a Dynamic UI with Fragments&lt;/a&gt;&lt;/p&gt;&lt;h2 id="fragment"&gt;Fragment&lt;/h2&gt;&lt;p&gt;Fragment is sort of like a “sub activity” that you can reuse in different activities.&lt;/p&gt;&lt;p&gt;It can:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;have its own lifecycle&lt;/li&gt; &lt;li&gt;receive its own input events&lt;/li&gt; &lt;li&gt;add or remove while the activity is running&lt;/li&gt; &lt;/ul&gt;&lt;blockquote&gt; &lt;p&gt;To use fragment, it needs at least Support Library v4. But better to use v7 which is compatible with Android 2.1 (API level 7) and also includes the Fragment APIs.&lt;/p&gt; &lt;/blockquote&gt;&lt;blockquote&gt; &lt;p&gt;For activity, it needs to extend &lt;code class="highlighter-rouge"&gt;AppCompatActivity&lt;/code&gt; when with v7. In fact, &lt;code class="highlighter-rouge"&gt;FragmentActivity&lt;/code&gt; is a special activity provided in Support Library to handle fragments on system versions older than API level 11. If the lowest system version is API level 11 or higher, then we can use a regular &lt;code class="highlighter-rouge"&gt;Activity&lt;/code&gt;. As here &lt;code class="highlighter-rouge"&gt;AppCompatActivity&lt;/code&gt; is a subclass of &lt;code class="highlighter-rouge"&gt;FragmentActivity&lt;/code&gt; and it could support older versions. So just use it :D&lt;/p&gt; &lt;/blockquote&gt;&lt;p&gt;Steps to use fragment:&lt;/p&gt;&lt;ol&gt; &lt;li&gt;Add Support Library.&lt;/li&gt; &lt;li&gt;Define fragment layout xml&lt;/li&gt; &lt;li&gt;Create fragment class&lt;/li&gt; &lt;li&gt;Add fragment to activity statically/dynamically&lt;/li&gt; &lt;/ol&gt;&lt;h3 id="define-fragment-layout"&gt;Define Fragment Layout&lt;/h3&gt;&lt;p&gt;Its layout has no difference with activity’s:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt; &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt; &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt; &lt;span class="na"&gt;android:orientation=&lt;/span&gt;&lt;span class="s"&gt;"vertical"&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;TextView&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/textView1"&lt;/span&gt; &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt; &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt; &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"TextView"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;Button&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/button1"&lt;/span&gt; &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt; &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt; &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Button"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h3 id="create-fragment-class"&gt;Create Fragment Class&lt;/h3&gt;&lt;p&gt;Like &lt;code class="highlighter-rouge"&gt;onCreate()&lt;/code&gt; in Activity, fragment uses &lt;code class="highlighter-rouge"&gt;onCreateView()&lt;/code&gt; callback to define the layout. It is the only callback we need in order to get a fragment running.&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyFragment&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Fragment&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="nf"&gt;onCreateView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LayoutInflater&lt;/span&gt; &lt;span class="n"&gt;inflater&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ViewGroup&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Inflate the layout for this fragment&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;inflater&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;inflate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;article_view&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h3 id="add-fragment-to-activity"&gt;Add Fragment to Activity&lt;/h3&gt;&lt;p&gt;There are two ways:&lt;/p&gt;&lt;ol&gt; &lt;li&gt;Statically by &lt;code class="highlighter-rouge"&gt;&amp;lt;fragment&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Dynamically by &lt;code class="highlighter-rouge"&gt;&amp;lt;FrameLayout&amp;gt;&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;FragmentManager&lt;/code&gt;&lt;/li&gt; &lt;/ol&gt;&lt;h4 id="statically"&gt;Statically&lt;/h4&gt;&lt;p&gt;Add each fragment in activity layout XML file:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt; &lt;span class="na"&gt;android:orientation=&lt;/span&gt;&lt;span class="s"&gt;"horizontal"&lt;/span&gt; &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"fill_parent"&lt;/span&gt; &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"fill_parent"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;fragment&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;"com.example.android.fragments.FragmentA"&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/fragment_a"&lt;/span&gt; &lt;span class="na"&gt;android:layout_weight=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"0dp"&lt;/span&gt; &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;fragment&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;"com.example.android.fragments.FragmentB"&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/fragment_b"&lt;/span&gt; &lt;span class="na"&gt;android:layout_weight=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"0dp"&lt;/span&gt; &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h4 id="dynamically"&gt;Dynamically&lt;/h4&gt;&lt;p&gt;Dynamically means adding a fragment to an activity at Runtime instead of defining fragments in activity layout file.&lt;/p&gt;&lt;p&gt;Add firstly in activity’s layout includes an empty &lt;code class="highlighter-rouge"&gt;&amp;lt;FrameLayout&amp;gt;&lt;/code&gt; that acts as the fragment container:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;FrameLayout&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/fragment_container"&lt;/span&gt; &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt; &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;Add initial fragment(s) to activity in &lt;code class="highlighter-rouge"&gt;onCreate()&lt;/code&gt; by &lt;code class="highlighter-rouge"&gt;FragmentTransaction&lt;/code&gt;:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainActivity&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;AppCompatActivity&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onCreate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;setContentView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;news_articles&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// Check that the activity is using the layout version with&lt;/span&gt; &lt;span class="c1"&gt;// the fragment_container FrameLayout&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fragment_container&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;// However, if we're being restored from a previous state,&lt;/span&gt; &lt;span class="c1"&gt;// then we don't need to do anything and should return or else&lt;/span&gt; &lt;span class="c1"&gt;// we could end up with overlapping fragments.&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="c1"&gt;// Create a new Fragment to be placed in the activity layout&lt;/span&gt; &lt;span class="n"&gt;FragmentA&lt;/span&gt; &lt;span class="n"&gt;firstFragment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FragmentA&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// In case this activity was started with special instructions from an&lt;/span&gt; &lt;span class="c1"&gt;// Intent, pass the Intent's extras to the fragment as arguments&lt;/span&gt; &lt;span class="n"&gt;firstFragment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setArguments&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getIntent&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getExtras&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// Add the fragment to the 'fragment_container' FrameLayout&lt;/span&gt; &lt;span class="n"&gt;getSupportFragmentManager&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;beginTransaction&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fragment_container&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;firstFragment&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;commit&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;&lt;code class="highlighter-rouge"&gt;FragmentTransaction&lt;/code&gt; here is to provides APIs to add, remove, replace, and perform other fragment transactions.&lt;/p&gt;&lt;p&gt;To replace fragment:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="c1"&gt;// Create fragment and give it an argument specifying the article it should show&lt;/span&gt; &lt;span class="n"&gt;FragmentB&lt;/span&gt; &lt;span class="n"&gt;newFragment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FragmentB&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Bundle&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;putInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FragmentB&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ARG_POSITION&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;newFragment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setArguments&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="n"&gt;FragmentTransaction&lt;/span&gt; &lt;span class="n"&gt;transaction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getSupportFragmentManager&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;beginTransaction&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;&lt;span class="c1"&gt;// Replace whatever is in the fragment_container view with this fragment,&lt;/span&gt; &lt;span class="c1"&gt;// and add the transaction to the back stack so the user can navigate back&lt;/span&gt; &lt;span class="n"&gt;transaction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fragment_container&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;newFragment&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;transaction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addToBackStack&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// Commit the transaction&lt;/span&gt; &lt;span class="n"&gt;transaction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;commit&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;When replace/remove fragments, it needs to allow user to navigate backward and “undo” the change. It is why &lt;code class="highlighter-rouge"&gt;transaction.addToBackStack(null)&lt;/code&gt; is called here before commit. It makes fragment to be stopped instead of destroyed when we replace/remove it.&lt;/p&gt;&lt;p&gt;What’s more, this method takes an optional string parameter that specifies a unique name for the transaction. The name isn’t needed unless we plan to perform advanced fragment operations using &lt;a href="https://developer.android.com/reference/android/support/v4/app/FragmentManager.BackStackEntry.html"&gt;FragmentManager.BackStackEntry APIs&lt;/a&gt;.&lt;/p&gt; </description> <pubDate>Sat, 21 May 2016 00:00:00 +0800</pubDate><link>http://localhost:4000/android/Android-Fragment/</link> <guid isPermaLink="true">http://localhost:4000/android/Android-Fragment/</guid> <category>android</category> <category>android</category> </item> <item><title>Android Toolbar</title> <description>&lt;p&gt;Quick note about learning &lt;a href="https://developer.android.com/training/appbar/index.html"&gt;Training : Adding the App Bar&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Android introduces a new Toolbar widget. It is a generalization of the Action Bar pattern that gives us much more control and flexibility. ActionBar now is considered a special kind of Toolbar.&lt;/p&gt;&lt;p&gt;Using a Toolbar as an replacement to ActionBar:&lt;/p&gt;&lt;ol&gt; &lt;li&gt;Greater control to customize its appearance.&lt;/li&gt; &lt;li&gt;Fully support to lower android os devices via AppCompact support lib.&lt;/li&gt; &lt;li&gt;Continue to use the ActionBar features such as menus, selections, etc.&lt;/li&gt; &lt;li&gt;Use a standalone Toolbar, put it where ever we want in app.&lt;/li&gt; &lt;/ol&gt;&lt;h2 id="add-toolbar"&gt;Add Toolbar&lt;/h2&gt;&lt;p&gt;To Add Toolbar:&lt;/p&gt;&lt;ol&gt; &lt;li&gt;Have &lt;a href="https://developer.android.com/topic/libraries/support-library/features.html#v7-appcompat"&gt;v7 appcompat support library&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Activity to extend &lt;code class="highlighter-rouge"&gt;AppCompatActivity&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Update theme to be without actionbar&lt;/li&gt; &lt;li&gt;Apply theme to every activity&lt;/li&gt; &lt;li&gt;Define toolbar in activity layout&lt;/li&gt; &lt;li&gt;Update &lt;code class="highlighter-rouge"&gt;onCreate()&lt;/code&gt; to have this toolbar&lt;/li&gt; &lt;/ol&gt;&lt;h4 id="extend-appcompatactivity"&gt;Extend &lt;code class="highlighter-rouge"&gt;AppCompatActivity&lt;/code&gt;&lt;/h4&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyActivity&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;AppCompatActivity&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// ...&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h4 id="update-theme"&gt;Update theme&lt;/h4&gt;&lt;p&gt;Update theme to NoActionBar to prevent the app from using the native ActionBar class to provide toolbar.&lt;/p&gt;&lt;p&gt;In &lt;code class="highlighter-rouge"&gt;res/values/styles.xml&lt;/code&gt;:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="c"&gt;&amp;lt;!-- Theme for activity --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;style&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"AppTheme.NoActionBar"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"windowActionBar"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;false&lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"windowNoTitle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;true&lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- Theme for toolbar --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;style&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"AppTheme.AppBarOverlay"&lt;/span&gt; &lt;span class="na"&gt;parent=&lt;/span&gt;&lt;span class="s"&gt;"ThemeOverlay.AppCompat.Dark.ActionBar"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- Theme for toolbar popup menu --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;style&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"AppTheme.PopupOverlay"&lt;/span&gt; &lt;span class="na"&gt;parent=&lt;/span&gt;&lt;span class="s"&gt;"ThemeOverlay.AppCompat.Light"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h4 id="update-androidmanifestxml"&gt;Update &lt;code class="highlighter-rouge"&gt;AndroidManifest.xml&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;Make sure all &lt;code class="highlighter-rouge"&gt;&amp;lt;activity&amp;gt;&lt;/code&gt; has the AppTheme.&lt;code class="highlighter-rouge"&gt;NoActionBar&lt;/code&gt; theme&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;android:theme="@style/AppTheme.NoActionBar"&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h4 id="update-activity-layout"&gt;Update activity layout&lt;/h4&gt;&lt;ul&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;android:theme&lt;/code&gt; sets theme for the whole toolbar.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;app:popupTheme&lt;/code&gt; sets theme for the toolbar overflow menu.&lt;/li&gt; &lt;/ul&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;android.support.v7.widget.Toolbar&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/my_toolbar"&lt;/span&gt; &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt; &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"?attr/actionBarSize"&lt;/span&gt; &lt;span class="na"&gt;android:background=&lt;/span&gt;&lt;span class="s"&gt;"?attr/colorPrimary"&lt;/span&gt; &lt;span class="na"&gt;android:elevation=&lt;/span&gt;&lt;span class="s"&gt;"4dp"&lt;/span&gt; &lt;span class="na"&gt;android:theme=&lt;/span&gt;&lt;span class="s"&gt;"@style/ThemeOverlay.AppCompat.ActionBar"&lt;/span&gt; &lt;span class="na"&gt;app:popupTheme=&lt;/span&gt;&lt;span class="s"&gt;"@style/ThemeOverlay.AppCompat.Light"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;blockquote&gt; &lt;p&gt;Elevation 4dp is recommanded by &lt;a href="https://www.google.com/design/spec/what-is-material/elevation-shadows.html#elevation-shadows-shadows"&gt;Material Design specification&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt;&lt;h4 id="update-oncreate"&gt;Update &lt;code class="highlighter-rouge"&gt;onCreate()&lt;/code&gt;&lt;/h4&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onCreate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;setContentView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;activity_my&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="n"&gt;Toolbar&lt;/span&gt; &lt;span class="n"&gt;myToolbar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Toolbar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;my_toolbar&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;setSupportActionBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myToolbar&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="add-action-buttons"&gt;Add Action Buttons&lt;/h2&gt;&lt;p&gt;To add action buttons:&lt;/p&gt;&lt;ol&gt; &lt;li&gt;Update menu layout xml in &lt;code class="highlighter-rouge"&gt;res/menu/&lt;/code&gt; to have this button&lt;/li&gt; &lt;li&gt;Update &lt;code class="highlighter-rouge"&gt;onOptionsItemSelected()&lt;/code&gt; to add listener&lt;/li&gt; &lt;/ol&gt;&lt;h4 id="update-menu-layout-xml"&gt;Update menu layout xml&lt;/h4&gt;&lt;p&gt;Button will appear directly in toolbar or in overflow menu according to:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;app:showAsAction="ifRoom"&lt;/code&gt; - button will be displayed on toolbar if there is enough room in the toolbar; if not, it will be in overflow menu.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;app:showAsAction="never"&lt;/code&gt; - Only in the overflow menu.&lt;/li&gt; &lt;/ul&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;menu&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt; &lt;span class="na"&gt;xmlns:app=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res-auto"&lt;/span&gt; &lt;span class="na"&gt;xmlns:tools=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/tools"&lt;/span&gt; &lt;span class="na"&gt;tools:context=&lt;/span&gt;&lt;span class="s"&gt;"com.example.chuandong.myapplication.MainActivity"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- in toolbar if there is room --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/item_a"&lt;/span&gt; &lt;span class="na"&gt;android:icon=&lt;/span&gt;&lt;span class="s"&gt;"@mipmap/ic_launcher"&lt;/span&gt; &lt;span class="na"&gt;android:title=&lt;/span&gt;&lt;span class="s"&gt;"@string/action_settings"&lt;/span&gt; &lt;span class="na"&gt;app:showAsAction=&lt;/span&gt;&lt;span class="s"&gt;"ifRoom"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- in overflow menu --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/item_b"&lt;/span&gt; &lt;span class="na"&gt;android:orderInCategory=&lt;/span&gt;&lt;span class="s"&gt;"100"&lt;/span&gt; &lt;span class="na"&gt;android:title=&lt;/span&gt;&lt;span class="s"&gt;"@string/action_settings"&lt;/span&gt; &lt;span class="na"&gt;app:showAsAction=&lt;/span&gt;&lt;span class="s"&gt;"never"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/menu&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h4 id="update-onoptionsitemselected-to-add-listener"&gt;Update &lt;code class="highlighter-rouge"&gt;onOptionsItemSelected()&lt;/code&gt; to add Listener&lt;/h4&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;onOptionsItemSelected&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MenuItem&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getItemId&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;item_a&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;// ToDo&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;item_b&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;// ToDo&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;// ToDo&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onOptionsItemSelected&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h3 id="adding-an-up-action"&gt;Adding an Up Action&lt;/h3&gt;&lt;p&gt;Up button in toolbar is for all activities (except the main one) to &lt;strong&gt;navigate to the parent activity&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;Two steps:&lt;/p&gt;&lt;ol&gt; &lt;li&gt;Declare a Parent Activity&lt;/li&gt; &lt;li&gt;Enable the Up button for an activity&lt;/li&gt; &lt;/ol&gt;&lt;h4 id="declare-a-parent-activity"&gt;Declare a Parent Activity&lt;/h4&gt;&lt;p&gt;In &lt;code class="highlighter-rouge"&gt;AndroidManifest.xml&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;For higher than Android 4.1 (API level 16), using &lt;code class="highlighter-rouge"&gt;android:parentActivityName&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;For older version, using &lt;code class="highlighter-rouge"&gt;&amp;lt;meta-data&amp;gt;&lt;/code&gt; name-value pair, where name is &lt;code class="highlighter-rouge"&gt;android.support.PARENT_ACTIVITY&lt;/code&gt; with value the name of the parent activity.&lt;/li&gt; &lt;/ul&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;application&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; ...&lt;span class="c"&gt;&amp;lt;!-- The main/home activity (it has no parent activity) --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;activity&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;"com.example.myfirstapp.MainActivity"&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; ... &lt;span class="nt"&gt;&amp;lt;/activity&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- A child of the main activity --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;activity&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;"com.example.myfirstapp.MyChildActivity"&lt;/span&gt; &lt;span class="na"&gt;android:label=&lt;/span&gt;&lt;span class="s"&gt;"@string/title_activity_child"&lt;/span&gt; &lt;span class="na"&gt;android:parentActivityName=&lt;/span&gt;&lt;span class="s"&gt;"com.example.myfirstapp.MainActivity"&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- Parent activity meta-data to support 4.0 and lower --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;meta-data&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;"android.support.PARENT_ACTIVITY"&lt;/span&gt; &lt;span class="na"&gt;android:value=&lt;/span&gt;&lt;span class="s"&gt;"com.example.myfirstapp.MainActivity"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/activity&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/application&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h4 id="enable-up-button"&gt;Enable Up button&lt;/h4&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onCreate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;setContentView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;activity_my&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="n"&gt;Toolbar&lt;/span&gt; &lt;span class="n"&gt;myToolbar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Toolbar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;my_toolbar&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;setSupportActionBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myToolbar&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// Get a support ActionBar corresponding to this toolbar&lt;/span&gt; &lt;span class="n"&gt;ActionBar&lt;/span&gt; &lt;span class="n"&gt;actionbar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getSupportActionBar&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;&lt;span class="c1"&gt;// Enable the Up button&lt;/span&gt; &lt;span class="n"&gt;actionbar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setDisplayHomeAsUpEnabled&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="action-views"&gt;Action Views&lt;/h2&gt;&lt;p&gt;It is an action providing rich functionality. For example, a search action view allows the user to type their search text in toolbar, without having to change activities or fragments.&lt;/p&gt;&lt;ol&gt; &lt;li&gt;Add &lt;code class="highlighter-rouge"&gt;&amp;lt;item&amp;gt;&lt;/code&gt; in toolbar menu resource&lt;/li&gt; &lt;li&gt;Update &lt;code class="highlighter-rouge"&gt;onCreateOptionsMenu()&lt;/code&gt; to add event listener&lt;/li&gt; &lt;/ol&gt;&lt;h4 id="update-toolbar-menu-resource"&gt;Update toolbar menu resource&lt;/h4&gt;&lt;p&gt;To add an action view, create an &lt;code class="highlighter-rouge"&gt;&amp;lt;item&amp;gt;&lt;/code&gt; element in the toolbar’s menu resource. Then add one of the following two attributes to the element:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;actionViewClass&lt;/code&gt; - The class of a widget that implements the action.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;actionLayout&lt;/code&gt; - A layout resource describing the action’s components.&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;Set &lt;code class="highlighter-rouge"&gt;showAsAction&lt;/code&gt; to either &lt;code class="highlighter-rouge"&gt;ifRoom|collapseActionView&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;never|collapseActionView&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The &lt;code class="highlighter-rouge"&gt;collapseActionView&lt;/code&gt; indicates how to display the widget when the user is not interacting with it: If the widget is on toolbar, the app should display the widget as an icon. If the widget is in the overflow menu, the app should display the widget as a menu item. When the user interacts with the action view, it expands to fill toolbar.&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/action_search"&lt;/span&gt; &lt;span class="na"&gt;android:title=&lt;/span&gt;&lt;span class="s"&gt;"@string/action_search"&lt;/span&gt; &lt;span class="na"&gt;android:icon=&lt;/span&gt;&lt;span class="s"&gt;"@drawable/ic_search"&lt;/span&gt; &lt;span class="na"&gt;app:showAsAction=&lt;/span&gt;&lt;span class="s"&gt;"ifRoom|collapseActionView"&lt;/span&gt; &lt;span class="na"&gt;app:actionViewClass=&lt;/span&gt;&lt;span class="s"&gt;"android.support.v7.widget.SearchView"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h4 id="update-oncreateoptionsmenu"&gt;Update &lt;code class="highlighter-rouge"&gt;onCreateOptionsMenu()&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;Update &lt;code class="highlighter-rouge"&gt;onCreateOptionsMenu()&lt;/code&gt; in activity to add event listener&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;onCreateOptionsMenu&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Menu&lt;/span&gt; &lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;getMenuInflater&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;inflate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;main_activity_actions&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="n"&gt;MenuItem&lt;/span&gt; &lt;span class="n"&gt;searchItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findItem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;action_search&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;SearchView&lt;/span&gt; &lt;span class="n"&gt;searchView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SearchView&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;MenuItemCompat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getActionView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;searchItem&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// Configure the search info and add any event listeners...&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onCreateOptionsMenu&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h4 id="listener-to-action-view-collapseexpanded"&gt;Listener to action view collapse/expanded&lt;/h4&gt;&lt;p&gt;If we want to do something when action view collapses/expands:&lt;/p&gt;&lt;ol&gt; &lt;li&gt;Define and override &lt;code class="highlighter-rouge"&gt;OnActionExpandListener&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Add this listener to action view item&lt;/li&gt; &lt;/ol&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;onCreateOptionsMenu&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Menu&lt;/span&gt; &lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;getMenuInflater&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;inflate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ...&lt;/span&gt;&lt;span class="c1"&gt;// Define the listener&lt;/span&gt; &lt;span class="n"&gt;OnActionExpandListener&lt;/span&gt; &lt;span class="n"&gt;expandListener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;OnActionExpandListener&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;onMenuItemActionCollapse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MenuItem&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Do something when action item collapses&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Return true to collapse action view&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;onMenuItemActionExpand&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MenuItem&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Do something when expanded&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Return true to expand action view&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;};&lt;/span&gt;&lt;span class="c1"&gt;// Get the MenuItem for the action item&lt;/span&gt; &lt;span class="n"&gt;MenuItem&lt;/span&gt; &lt;span class="n"&gt;actionMenuItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findItem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;myActionItem&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// Assign the listener to that action item&lt;/span&gt; &lt;span class="n"&gt;MenuItemCompat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setOnActionExpandListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actionMenuItem&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expandListener&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// Any other things you have to do when creating the options menu…&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="action-providers"&gt;Action Providers&lt;/h2&gt;&lt;p&gt;It is an action with its own customized layout. When user clicks it, the action provider controls the action’s behavior in any way we want. For example, the action provider might respond to a click by displaying a menu.&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/action_share"&lt;/span&gt; &lt;span class="na"&gt;android:title=&lt;/span&gt;&lt;span class="s"&gt;"@string/share"&lt;/span&gt; &lt;span class="na"&gt;app:showAsAction=&lt;/span&gt;&lt;span class="s"&gt;"ifRoom"&lt;/span&gt; &lt;span class="na"&gt;app:actionProviderClass=&lt;/span&gt;&lt;span class="s"&gt;"android.support.v7.widget.ShareActionProvider"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;To create a custom action provider, see &lt;a href="https://developer.android.com/reference/android/support/v4/view/ActionProvider.html"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;To configure a ShareActionProvider, see &lt;a href="https://developer.android.com/reference/android/support/v7/widget/ShareActionProvider.html"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="ref"&gt;Ref&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;&lt;a href="http://stackoverflow.com/questions/27665018/what-is-the-difference-between-action-bar-and-newly-introduced-toolbar"&gt;What is the difference between Action Bar and newly introduced Toolbar?&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; </description> <pubDate>Fri, 20 May 2016 00:00:00 +0800</pubDate><link>http://localhost:4000/android/Android-Toolbar/</link> <guid isPermaLink="true">http://localhost:4000/android/Android-Toolbar/</guid> <category>android</category> <category>android</category> </item> <item><title>CSS Animation</title> <description>&lt;p&gt;Quick note about CSS animation.&lt;/p&gt;&lt;h2 id="css-animation"&gt;CSS Animation&lt;/h2&gt;&lt;p&gt;CSS3 animation lets an element gradually change from one style to another.&lt;/p&gt;&lt;p&gt;Two steps:&lt;/p&gt;&lt;ol&gt; &lt;li&gt;Use &lt;code class="highlighter-rouge"&gt;@keyframes&lt;/code&gt; to define an animation.&lt;/li&gt; &lt;li&gt;Set this animation on an element with animation properties&lt;/li&gt; &lt;/ol&gt;&lt;p&gt;We could set properties one-by-one or with following shorthand:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-css" data-lang="css"&gt;&lt;span class="nt"&gt;animation&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;animation-name&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;animation-duration&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;animation-timing-function&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;animation-delay&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;animation-iteration-count&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;animation-direction&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;animation-fill-mode&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;animation-play-state&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="keyframes"&gt;@keyframes&lt;/h2&gt;&lt;p&gt;It defines what the animation looks like at each stage of the animation timeline. It is composed of:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;Name of the animation. For example, changeColor.&lt;/li&gt; &lt;li&gt;Stages: From 0% to 100% to represent the whole process of animation&lt;/li&gt; &lt;li&gt;CSS Properties: The CSS properties defined for each stage of the animation timeline.&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;Following example creates an animation called &lt;code class="highlighter-rouge"&gt;changeColor&lt;/code&gt; and assign it to &lt;code class="highlighter-rouge"&gt;div:hover&lt;/code&gt;:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-css" data-lang="css"&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;changeColor&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nt"&gt;60&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nt"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;changeColor&lt;/span&gt; &lt;span class="m"&gt;5s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt; &lt;span class="m"&gt;.1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;blockquote&gt; &lt;p&gt;In above example, we could also use &lt;code class="highlighter-rouge"&gt;from&lt;/code&gt; to represent &lt;code class="highlighter-rouge"&gt;0%&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;to&lt;/code&gt; to represent &lt;code class="highlighter-rouge"&gt;100%&lt;/code&gt;&lt;/p&gt; &lt;/blockquote&gt;&lt;h2 id="animation-properties"&gt;Animation Properties&lt;/h2&gt;&lt;p&gt;It has following properties:&lt;/p&gt;&lt;ol&gt; &lt;li&gt;animation-name&lt;/li&gt; &lt;li&gt;animation-duration&lt;/li&gt; &lt;li&gt;animation-timing-function&lt;/li&gt; &lt;li&gt;animation-delay&lt;/li&gt; &lt;li&gt;animation-iteration-count&lt;/li&gt; &lt;li&gt;animation-direction&lt;/li&gt; &lt;li&gt;animation-fill-mode&lt;/li&gt; &lt;li&gt;animation-play-state&lt;/li&gt; &lt;/ol&gt;&lt;h3 id="animation-name"&gt;animation-name&lt;/h3&gt;&lt;p&gt;The name of the animation, defined in the @keyframes.&lt;/p&gt;&lt;h3 id="animation-duration"&gt;animation-duration&lt;/h3&gt;&lt;p&gt;The duration of the animation, in seconds (e.g., 5s) or milliseconds (e.g., 200ms).&lt;/p&gt;&lt;h3 id="animation-timing-function"&gt;animation-timing-function&lt;/h3&gt;&lt;p&gt;The speed curve or pace of the animation:&lt;/p&gt;&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Timing Function&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;linear&lt;/td&gt; &lt;td&gt;The animation has the same speed from start to end&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ease&lt;/td&gt; &lt;td&gt;&lt;strong&gt;Default value&lt;/strong&gt;. The animation has a slow start, then fast, before it ends slowly.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ease-in&lt;/td&gt; &lt;td&gt;Start slowly and end fast.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ease-out&lt;/td&gt; &lt;td&gt;Start more quickly than linear ones and end slowly. The opposite of ease-in.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ease-in-out&lt;/td&gt; &lt;td&gt;Both a slow start and a slow end&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;initial&lt;/td&gt; &lt;td&gt;Sets this property to its default value. So &lt;code class="highlighter-rouge"&gt;ease&lt;/code&gt;.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;inherit&lt;/td&gt; &lt;td&gt;Inherits this property from its parent element.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;&lt;blockquote&gt; &lt;p&gt;Check &lt;a href="https://developers.google.com/web/fundamentals/design-and-ui/animations/the-basics-of-easing?hl=en"&gt;The basics of easing&lt;/a&gt; for details.&lt;/p&gt; &lt;/blockquote&gt;&lt;h3 id="animation-delay"&gt;animation-delay&lt;/h3&gt;&lt;p&gt;It specifies when the animation will start. The value is defined in seconds (s) or milliseconds (mil).&lt;/p&gt;&lt;h3 id="animation-iteration-count"&gt;animation-iteration-count&lt;/h3&gt;&lt;p&gt;It specifies the number of times that the animation will play. The possible values are:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;a specific number of iterations (default is 1)&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;infinite&lt;/code&gt; - repeats forever&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;initial&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;inherit&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;h3 id="animation-direction"&gt;animation-direction&lt;/h3&gt;&lt;p&gt;It specifies whether the animation should play forward, reverse, or in alternate cycles.&lt;/p&gt;&lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;code class="highlighter-rouge"&gt;normal&lt;/code&gt; - Default. On each cycle the animation resets to the beginning state (0%) and plays forward again (to 100%).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code class="highlighter-rouge"&gt;reverse&lt;/code&gt; - On each cycle the animation resets to the end state (100%) and plays backwards (to 0%).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code class="highlighter-rouge"&gt;alternate&lt;/code&gt; - On each odd cycle, the animation plays forward (0% to 100%). On each even cycle, the animation plays backwards (100% to 0%).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code class="highlighter-rouge"&gt;alternate-reverse&lt;/code&gt; - On each odd cycle, the animation plays in reverse (100% to 0%). On each even cycle, the animation plays forward (0% or 100%).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;&lt;h3 id="animation-fill-mode"&gt;animation-fill-mode&lt;/h3&gt;&lt;p&gt;It specifies if the animation styles are visible before or after the animation plays.&lt;/p&gt;&lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;code class="highlighter-rouge"&gt;normal&lt;/code&gt; - Default. The animation does not apply any styles to the element, before or after the animation.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code class="highlighter-rouge"&gt;forwards&lt;/code&gt; - After the animation is finished, the styles defined in the final keyframe (100%) are retained by the element.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code class="highlighter-rouge"&gt;backwards&lt;/code&gt; - Before the animation (during the animation delay), the styles of the initial keyframe (0%) are applied to the element.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code class="highlighter-rouge"&gt;both&lt;/code&gt; - &lt;code class="highlighter-rouge"&gt;forwards&lt;/code&gt; with &lt;code class="highlighter-rouge"&gt;backwards&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;&lt;h3 id="animation-play-state"&gt;animation-play-state&lt;/h3&gt;&lt;p&gt;Two values: &lt;code class="highlighter-rouge"&gt;running&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;paused&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;It specifies whether the animation is &lt;code class="highlighter-rouge"&gt;playing&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;paused&lt;/code&gt;. &lt;strong&gt;Resuming a paused animation starts the animation where it was left off. But if pause an animation, the element style will return back to its origin.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Example:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-css" data-lang="css"&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;animation-play-state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;paused&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="multiple-animations"&gt;Multiple Animations&lt;/h2&gt;&lt;p&gt;Add multiple animations to a selector with comma:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-css" data-lang="css"&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;animationA&lt;/span&gt; &lt;span class="m"&gt;2s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;animationB&lt;/span&gt; &lt;span class="m"&gt;2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="refs"&gt;Refs&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;&lt;a href="http://www.imooc.com/learn/33"&gt;Imooc 十天精通CSS3&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://robots.thoughtbot.com/css-animation-for-beginners#animation-iteration-count"&gt;CSS Animation for Beginners&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp"&gt;CSS3 animation-timing-function Property&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; </description> <pubDate>Fri, 22 Apr 2016 00:00:00 +0800</pubDate><link>http://localhost:4000/css/CSS-Animation/</link> <guid isPermaLink="true">http://localhost:4000/css/CSS-Animation/</guid> <category>css</category> <category>CSS</category> </item> <item><title>MySQL Index</title> <description>&lt;p&gt;Quick note about MySQL Index.&lt;/p&gt;&lt;h2 id="why-index"&gt;Why Index&lt;/h2&gt;&lt;p&gt;Indexes are used to &lt;strong&gt;find rows with specific column values quickly&lt;/strong&gt;. Without an index, MySQL must begin with the first row and then read through the entire table to find the relevant rows. The larger the table, the more this costs. If the table has an index for the columns in question, MySQL can quickly determine the position to seek to in the middle of the data file without having to look at all the data. This is much faster than reading every row sequentially.&lt;/p&gt;&lt;p&gt;Most MySQL indexes are stored in &lt;a href="http://dev.mysql.com/doc/refman/5.7/en/glossary.html#glos_b_tree"&gt;B-trees&lt;/a&gt;. But indexes on spatial data types use R-trees;&lt;/p&gt;&lt;h2 id="index-type"&gt;Index Type&lt;/h2&gt;&lt;ol&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;INDEX&lt;/code&gt;. Duplicate values or composites are allowed.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;Composite Index&lt;/code&gt;. &lt;code class="highlighter-rouge"&gt;INDEX&lt;/code&gt; with multiple-column.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;UNIQUE INDEX&lt;/code&gt;. Duplicate values or composites are not allowed.&lt;/li&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;PRIMARY KEY&lt;/code&gt;. Special unique index. Only one in each table.&lt;/li&gt; &lt;/ol&gt;&lt;h3 id="composite-index"&gt;Composite Index&lt;/h3&gt;&lt;p&gt;Composite Index is multiple-column index. For example:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;tb_name&lt;/span&gt; &lt;span class="k"&gt;ADD&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;name_city_age&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;This composite index, in fact, is equivalent to the following three indexes:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;But &lt;strong&gt;NO&lt;/strong&gt; indexes like:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;Because of &lt;strong&gt;leftmost prefix&lt;/strong&gt;. It could simply be considered as composite from left. So the following select will benefit from this composite index:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;tb_name&lt;/span&gt; &lt;span class="n"&gt;WHREE&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;"admin"&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;"Paris"&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;tb_name&lt;/span&gt; &lt;span class="n"&gt;WHREE&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;"admin"&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;The following will not use it：&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;tb_name&lt;/span&gt; &lt;span class="n"&gt;WHREE&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;"Paris"&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;tb_name&lt;/span&gt; &lt;span class="n"&gt;WHREE&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;"Paris"&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h3 id="unique-index"&gt;Unique Index&lt;/h3&gt;&lt;p&gt;A unique index enforces the constraint that we cannot have two equal values in that column. When unique with composite index, no two equal composites are allowed.&lt;/p&gt;&lt;p&gt;For example:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;table1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="n"&gt;INT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="n"&gt;INT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;UNIQUE&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;ux_table1_foo&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;table1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;-- Create unique index on foo.&lt;/span&gt;&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;table1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;-- OK&lt;/span&gt; &lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;table1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;-- OK&lt;/span&gt; &lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;table1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;-- OK&lt;/span&gt; &lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;table1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;-- Fails! Duplicate entry '1' for key 'ux_table1_foo'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;The last insert fails because it violates the unique index on column foo when it tries to insert the value 1 into this column for a second time.&lt;/p&gt;&lt;blockquote&gt; &lt;p&gt;In MySQL, &lt;code class="highlighter-rouge"&gt;UNIQUE&lt;/code&gt; constraint allows multiple NULLs.&lt;/p&gt; &lt;/blockquote&gt;&lt;h3 id="primary-key"&gt;PRIMARY KEY&lt;/h3&gt;&lt;p&gt;&lt;code class="highlighter-rouge"&gt;PRIMARY KEY&lt;/code&gt; is a special situation of &lt;code class="highlighter-rouge"&gt;UNIQUE&lt;/code&gt;&lt;/p&gt;&lt;p&gt;But some points different:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;&lt;code class="highlighter-rouge"&gt;PRIMARY KEY&lt;/code&gt; implies NOT NULL, but unique index can be nullable.&lt;/li&gt; &lt;li&gt;There can be only one &lt;code class="highlighter-rouge"&gt;PRIMARY KEY&lt;/code&gt;, but there can be multiple unique indexes.&lt;/li&gt; &lt;li&gt;If there is no clustered index defined then &lt;code class="highlighter-rouge"&gt;PRIMARY KEY&lt;/code&gt; will be the clustered index.&lt;/li&gt; &lt;/ul&gt;&lt;h2 id="create-index"&gt;Create Index&lt;/h2&gt;&lt;p&gt;Three ways to create index&lt;/p&gt;&lt;ol&gt; &lt;li&gt;CREATE TABLE&lt;/li&gt; &lt;li&gt;ALTER TABLE&lt;/li&gt; &lt;li&gt;CREATE INDEX (&lt;strong&gt;Not allowed to create &lt;code class="highlighter-rouge"&gt;PRIMARY KEY&lt;/code&gt;&lt;/strong&gt;)&lt;/li&gt; &lt;/ol&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;tb_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;indexName&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;column_list&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;UNIQUE&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;index_name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;column_list&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;ADD&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;index_name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;column_list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;ADD&lt;/span&gt; &lt;span class="k"&gt;UNIQUE&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;index_name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;column_list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;ADD&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;column_list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;index_name&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;column_list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;UNIQUE&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;index_name&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;column_list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="delete-index"&gt;Delete Index&lt;/h2&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;index_name&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;talbe_name&lt;/span&gt; &lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;index_name&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;To&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;primary&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;iss&lt;/span&gt; &lt;span class="k"&gt;unique&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;each&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;no&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;indicate&lt;/span&gt; &lt;span class="k"&gt;index&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;Delete a column from a table, index will also be influenced. For composite index, if one column inside the index is removed, the composite index will also remove it from its compostes. What’s more, if all columns from this index are removed, the composite index will be removed entirely.&lt;/p&gt;&lt;h2 id="show-index"&gt;Show index&lt;/h2&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;show&lt;/span&gt; &lt;span class="k"&gt;index&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;tb_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;show&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;tb_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="disadvantage"&gt;Disadvantage&lt;/h2&gt;&lt;p&gt;Adding index increases query speed. But:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;It decreases also speed to update, insert or delete.&lt;/li&gt; &lt;li&gt;Mysql comsumes more resources to maintain indexes&lt;/li&gt; &lt;li&gt;Indxes files occupy more spaces on disk&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;So we need to know how to choose columns to set index and also optimize queries.&lt;/p&gt;&lt;h2 id="how-to-choose-columns-for-index"&gt;How to choose columns for index&lt;/h2&gt;&lt;h6 id="consider-about-columns-as-conditions-in-queries-frequently-called"&gt;Consider about columns as conditions in queries frequently called.&lt;/h6&gt;&lt;h6 id="consider-about-columns-in-where-and-join"&gt;Consider about columns in &lt;code class="highlighter-rouge"&gt;WHERE&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;JOIN&lt;/code&gt;.&lt;/h6&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table1&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="k"&gt;LEFT&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;table2&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Paris'&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;So we could consider about setting index for age, city in &lt;code class="highlighter-rouge"&gt;WHERE&lt;/code&gt; or username in &lt;code class="highlighter-rouge"&gt;JOIN&lt;/code&gt;. &lt;strong&gt;Only one index can be used per SELECT/statement in the query&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Index works with these operators &amp;lt;,&amp;lt;=,=,&amp;gt;,&amp;gt;=,between,in and like (Only for expression not beginning with% or _).&lt;/p&gt;&lt;h6 id="not-suggest-columns-which-will-be-updated-inserted-or-deleted-too-frequently"&gt;Not suggest columns which will be updated, inserted or deleted too frequently.&lt;/h6&gt;&lt;h6 id="better-to-choose-columns-with-big-cardinality-so-different-values-it-is-easy-to-distinguish-birthday-with-differentdates-it-means-nothing-set-index-on-gendar-to-distinguish-gendar-with-only-m-or-f-because-always-half-will-be-left"&gt;Better to choose columns with big cardinality, so different values. It is easy to distinguish birthday with differentdates. It means nothing set index on gendar to distinguish gendar with only ‘M’ or ‘F’. Because always half will be left.&lt;/h6&gt;&lt;p&gt;We could compte &lt;strong&gt;Index Selectivity&lt;/strong&gt; to help us to choose.&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="k"&gt;Index&lt;/span&gt; &lt;span class="n"&gt;Selectivity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;Cardinality&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;Rows&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;The higher the index selectivity value the more suggested to choose.&lt;/p&gt;&lt;h6 id="in-composite-index-consider-about-leftmost-column-with-big-index-selectivity-should-be-on-left"&gt;In composite index, consider about leftmost, column with big index selectivity should be on left.&lt;/h6&gt;&lt;h6 id="consider-table-with-many-records-for-example-2000-records"&gt;Consider table with many records, for example, 2000 records.&lt;/h6&gt;&lt;h6 id="consider-short-index-to-reduce-size-of-index-sometimes-we-dont-need-to-index-on-the-entire-field-we-could-set-a-prefix-length-for-exampe-a-column-is-char200-if-in-the-first-10-characters-most-records-are-uniquewe-could-use-short-index"&gt;Consider &lt;strong&gt;short index&lt;/strong&gt; to reduce size of index. Sometimes we don’t need to index on the entire field, we could set a prefix length. For exampe, a column is CHAR(200), if in the first 10 characters, most records are unique.We could use short index:&lt;/h6&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;tb_name&lt;/span&gt; &lt;span class="k"&gt;ADD&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;index_name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;long_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;So mysql only indexes according to first 10 characters which involves less disk I/O, comsumes less index spaces, so may increase query speed.&lt;/p&gt;&lt;h2 id="do-not"&gt;Do not!&lt;/h2&gt;&lt;ul&gt; &lt;li&gt; &lt;p&gt;Index does not work with &amp;lt;&amp;gt;,not in, !=.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Do not calculate on columns, it will make index invalid.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="k"&gt;YEAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;adddate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2007&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Better&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;like&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;adddate&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="s1"&gt;'2007-01-01'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;ul&gt; &lt;li&gt;Avoid to use &lt;code class="highlighter-rouge"&gt;NULL&lt;/code&gt; as default value for indexed column.&lt;/li&gt; &lt;/ul&gt;&lt;h2 id="refs"&gt;Refs&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;&lt;a href="http://stackoverflow.com/questions/1823685/when-should-i-use-a-composite-index"&gt;Stackoverflow - Composite index&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://stackoverflow.com/questions/487314/primary-key-or-unique-index"&gt;Stackoverflow - Primary key or Unique index?&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://segmentfault.com/a/1190000003072424"&gt;MYSQL-索引&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://dev.mysql.com/doc/refman/5.7/en/mysql-indexes.html"&gt;How MySQL Uses Indexes&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; </description> <pubDate>Wed, 20 Apr 2016 00:00:00 +0800</pubDate><link>http://localhost:4000/mysql/MySQL-Index/</link> <guid isPermaLink="true">http://localhost:4000/mysql/MySQL-Index/</guid> <category>mysql</category> <category>MySQL</category> </item> <item><title>MyBatis with Spring</title> <description>&lt;p&gt;Quick note about MyBatis with Spring. It’s a summary from official site &lt;a href="http://www.mybatis.org/spring/"&gt;mybatis-spring&lt;/a&gt;. Code demo: &lt;a href="https://github.com/DONGChuan/SpringMVC-Mybatis-Helloworld"&gt;A simple SpingMVC + Mybatis Helloworld&lt;/a&gt;&lt;/p&gt;&lt;h2 id="requirement"&gt;Requirement&lt;/h2&gt;&lt;p&gt;Additional jar &lt;a href="http://mvnrepository.com/artifact/org.mybatis/mybatis-spring"&gt;org.mybatis.mybatis-spring&lt;/a&gt; is needed&lt;/p&gt;&lt;h2 id="data-source"&gt;Data Source&lt;/h2&gt;&lt;p&gt;Here, any kind of DataSource is allowed. For example, &lt;code class="highlighter-rouge"&gt;org.springframework.jdbc.jar&lt;/code&gt;:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="c"&gt;&amp;lt;!-- In Resources folder, create jdbc.properties with following content --&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- jdbc.driver=com.mysql.jdbc.Driver --&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- jdbc.url=jdbc:mysql://localhost:3306/db_name --&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- jdbc.username=root --&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- jdbc.password=password --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"location"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"classpath:jdbc.properties"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"dataSource"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"org.springframework.jdbc.datasource.DriverManagerDataSource"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"driverClassName"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"${jdbc.driver}"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"${jdbc.url}"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"${jdbc.username}"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"${jdbc.password}"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;blockquote&gt; &lt;p&gt;I got &lt;code class="highlighter-rouge"&gt;CannotGetJdbcConnectionException&lt;/code&gt; when coded my &lt;a href="https://github.com/DONGChuan/SpringMVC-Mybatis-Helloworld"&gt;SpingMVC + Mybatis Helloworld example&lt;/a&gt;. The solution is to add &lt;code class="highlighter-rouge"&gt;?useUnicode=true&amp;amp;characterEncoding=utf-8&amp;amp;serverTimezone=GMT&lt;/code&gt;. So set explicitly unicode and timezone.&lt;/p&gt; &lt;/blockquote&gt;&lt;h2 id="setup-sqlsessionfactory"&gt;Setup SqlSessionFactory&lt;/h2&gt;&lt;p&gt;In previous note &lt;a href="http://dongchuan.github.io/articles/2016/04/MyBatis-CRUD.html"&gt;MyBatis Basic&lt;/a&gt;, we get &lt;code class="highlighter-rouge"&gt;SqlSessionFactory&lt;/code&gt; by &lt;code class="highlighter-rouge"&gt;SqlSessionFactoryBuilder&lt;/code&gt;:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;resource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"path/to/mybatis-config.xml"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;InputStream&lt;/span&gt; &lt;span class="n"&gt;inputStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Resources&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getResourceAsStream&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;SqlSessionFactory&lt;/span&gt; &lt;span class="n"&gt;sqlSessionFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;SqlSessionFactoryBuilder&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputStream&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;But in MyBatis-Spring xml, bean &lt;code class="highlighter-rouge"&gt;SqlSessionFactory&lt;/code&gt; is created by &lt;code class="highlighter-rouge"&gt;SqlSessionFactoryBean&lt;/code&gt;:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"sqlSessionFactory"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"org.mybatis.spring.SqlSessionFactoryBean"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"dataSource"&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"dataSource"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- Obliged --&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- Indicate location of mapper files where exists mysql statements --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"mapperLocations"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"classpath*:/mybatis/*Mapper.xml"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- Indicate mybatis config files where exists typeAliases, settings, etc --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"configLocation"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"classpath:/mybatis/mybatis-config.xml"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- In java code, it does the following step to create SqlSessionFactory SqlSessionFactoryBean factoryBean = new SqlSessionFactoryBean(); SqlSessionFactory sessionFactory = factoryBean.getObject(); --&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="define-mappers"&gt;Define mappers&lt;/h2&gt;&lt;p&gt;Two ways to define:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;Annotation based&lt;/li&gt; &lt;li&gt;XML based&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;When using xml based:&lt;/p&gt;&lt;ol&gt; &lt;li&gt;&lt;strong&gt;Tell &lt;code class="highlighter-rouge"&gt;SqlSessionFactoryBean&lt;/code&gt; where to find it by &lt;code class="highlighter-rouge"&gt;mapperLocations&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Mapper namespace must be full package path to mapper interface&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;id must be the same as function name in mapper interface, also the resultType, paramType, etc&lt;/strong&gt;.&lt;/li&gt; &lt;/ol&gt;&lt;p&gt;The following example mixed both of xml and annotation.&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" ?&amp;gt;&lt;/span&gt; &lt;span class="cp"&gt;&amp;lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- namespace must indicate mapper interface full package path --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;mapper&lt;/span&gt; &lt;span class="na"&gt;namespace=&lt;/span&gt;&lt;span class="s"&gt;"com.dong.web.mapper.UserMapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;select&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"getRowCount"&lt;/span&gt; &lt;span class="na"&gt;resultType=&lt;/span&gt;&lt;span class="s"&gt;"int"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; select count(*) from tb_user &lt;span class="nt"&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/mapper&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;UserMapper&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;getRowCount&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;&lt;span class="nd"&gt;@Select&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"select * from tb_user"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;getAllUsers&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="sqlsession"&gt;SqlSession&lt;/h2&gt;&lt;p&gt;In previous note &lt;a href="http://dongchuan.github.io/articles/2016/04/MyBatis-CRUD.html"&gt;MyBatis Basic&lt;/a&gt;, we get &lt;code class="highlighter-rouge"&gt;SqlSession&lt;/code&gt; from &lt;code class="highlighter-rouge"&gt;SqlSessionFactory&lt;/code&gt; and do transaction manually like following.&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="n"&gt;SqlSession&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqlSessionFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;openSession&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;commit&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;rollback&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;finally&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;But in mybatis-spring, beans will be injected with a thread safe &lt;code class="highlighter-rouge"&gt;SqlSession&lt;/code&gt; that automatically commits, rollbacks and closes the session based on Spring’s transaction configuration.&lt;/p&gt;&lt;p&gt;We have two ways to get sesion in DAOs:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;SqlSessionTemplate&lt;/li&gt; &lt;li&gt;SqlSessionDaoSupport&lt;/li&gt; &lt;/ul&gt;&lt;blockquote&gt; &lt;p&gt;But I prefer to use &lt;code class="highlighter-rouge"&gt;MapperScannerConfigurer&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;MapperFactoryBean&lt;/code&gt; directly to avoid coding DAOs manually. &lt;code class="highlighter-rouge"&gt;MapperScannerConfigurer&lt;/code&gt; could even automatically scan mapper interfaces. It’s the beat choice!&lt;/p&gt; &lt;/blockquote&gt;&lt;h3 id="transaction"&gt;Transaction&lt;/h3&gt;&lt;p&gt;So first, in mybatis-spring, just need to enable Spring transaction processing:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"transactionManager"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"org.springframework.jdbc.datasource.DataSourceTransactionManager"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"dataSource"&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"dataSource"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;tx:annotation-driven&lt;/span&gt; &lt;span class="na"&gt;transaction-manager=&lt;/span&gt;&lt;span class="s"&gt;"transactionManager"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;Then add &lt;code class="highlighter-rouge"&gt;@Transactional&lt;/code&gt; annotation on service layer.&lt;/p&gt;&lt;h3 id="sqlsessiontemplate"&gt;SqlSessionTemplate&lt;/h3&gt;&lt;p&gt;&lt;code class="highlighter-rouge"&gt;SqlSessionTemplate&lt;/code&gt; implements &lt;code class="highlighter-rouge"&gt;SqlSession&lt;/code&gt;. It is thread safe and can be shared by multiple DAOs or mappers. It is used to:&lt;/p&gt;&lt;ul&gt; &lt;li&gt;Ensure that &lt;code class="highlighter-rouge"&gt;SqlSession&lt;/code&gt; used is the one associated with the current Spring transaction when call SQL method.&lt;/li&gt; &lt;li&gt;Manage session life-cycle, including closing, committing or rolling back the session as necessary.&lt;/li&gt; &lt;li&gt;Translate MyBatis exceptions into Spring DataAccessExceptions.&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;So the idea here is to create a bean of &lt;code class="highlighter-rouge"&gt;SqlSessionTemplate&lt;/code&gt; and inject it in DAO layer:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="c"&gt;&amp;lt;!-- Create a SqlSession bean --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"sqlSession"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"org.mybatis.spring.SqlSessionTemplate"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;constructor-arg&lt;/span&gt; &lt;span class="na"&gt;index=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"sqlSessionFactory"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- Inject it in DAO layer --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"userDAO"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"com.dong.web.dao.UserDaoImpl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"sqlSession"&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"sqlSession"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;DAO class with injected sqlSession:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserDaoImpl&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;UserDao&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;SqlSession&lt;/span&gt; &lt;span class="n"&gt;sqlSession&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setSqlSession&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SqlSession&lt;/span&gt; &lt;span class="n"&gt;sqlSession&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sqlSession&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqlSession&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;getAllUsers&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sqlSession&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;select&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"com.dong.web.mapper.UserMapper.getAllUsers"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h4 id="batch-processing"&gt;Batch Processing&lt;/h4&gt;&lt;p&gt;To enable batch feature:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"sqlSession"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"com.dong.web.dao.UserServiceImpl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;constructor-arg&lt;/span&gt; &lt;span class="na"&gt;index=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"sqlSessionFactory"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;constructor-arg&lt;/span&gt; &lt;span class="na"&gt;index=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"BATCH"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;Now all SQL statements will be batched:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;insertUsers&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;sqlSession&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;insert&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"org.dong.web.mapper.UserMapper.insertUser"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h3 id="sqlsessiondaosupport"&gt;SqlSessionDaoSupport&lt;/h3&gt;&lt;p&gt;It is an abstract support class that provides &lt;code class="highlighter-rouge"&gt;SqlSession&lt;/code&gt;. &lt;strong&gt;We could call &lt;code class="highlighter-rouge"&gt;getSqlSession()&lt;/code&gt; by extending &lt;code class="highlighter-rouge"&gt;SqlSessionDaoSupport&lt;/code&gt; to get &lt;code class="highlighter-rouge"&gt;SqlSession&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserDaoImpl&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;SqlSessionDaoSupport&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;UserDao&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="nf"&gt;getUser&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;userId&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;getSqlSession&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;selectOne&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"com.dong.web.mapper.UserMapper.getUser"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;userId&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="mapperfactorybean"&gt;MapperFactoryBean&lt;/h2&gt;&lt;p&gt;It is used to avoid coding manually DAOs by &lt;code class="highlighter-rouge"&gt;SqlSessionDaoSupport&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;SqlSessionTemplate&lt;/code&gt;, so no DAOs here in java code! It handles creating an SqlSession as well as closing it. If there is a Spring transaction in progress, the session will also be committed or rolled back when the transaction completes.&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="c"&gt;&amp;lt;!-- Create a MapperFactoryBean for UserMapper interface --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"userMapper"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"org.mybatis.spring.mapper.MapperFactoryBean"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"mapperInterface"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"com.dong.web.mapper.UserMapper"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- Inject mapper in service layer --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"userService"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"com.dong.web.service.UserServiceImpl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"userMapper"&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"userMapper"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserServiceImpl&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="n"&gt;UserService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;UserMapper&lt;/span&gt; &lt;span class="n"&gt;userMapper&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setUserMapper&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserMapper&lt;/span&gt; &lt;span class="n"&gt;userMapper&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;userMapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;userMapper&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;getAllUsers&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;userMapper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getAllUsers&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="mapperscannerconfigurer"&gt;MapperScannerConfigurer&lt;/h2&gt;&lt;p&gt;With &lt;code class="highlighter-rouge"&gt;MapperFactoryBean&lt;/code&gt;, we need to declare a bean for each mapper interface. So better to use &lt;code class="highlighter-rouge"&gt;MapperScannerConfigurer&lt;/code&gt; to automatically scan to find mapper interfaces and register each of them as a &lt;code class="highlighter-rouge"&gt;MapperFactoryBean&lt;/code&gt;.&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="c"&gt;&amp;lt;!-- Scan all the interfaces under mapper/ --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;bean&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"org.mybatis.spring.mapper.MapperScannerConfigurer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"basePackage"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"com.dong.web.mapper"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;blockquote&gt; &lt;p&gt;IDE will mention &lt;code class="highlighter-rouge"&gt;Could not autowired&lt;/code&gt;, it’s because each &lt;code class="highlighter-rouge"&gt;MapperFactoryBean&lt;/code&gt; is created by &lt;code class="highlighter-rouge"&gt;MapperScannerConfigurer&lt;/code&gt;, IDE could not find yet an existing implementation, D’ont worry. (To check, at least, when I tried my helloworld, it works fine even with this error check)&lt;/p&gt; &lt;/blockquote&gt;&lt;h2 id="refs"&gt;Refs&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;&lt;a href="http://www.mybatis.org/mybatis-3/index.html"&gt;Mybatis doc refs&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.mybatis.org/spring/mappers.html"&gt;Mybatis-Spring&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; </description> <pubDate>Mon, 18 Apr 2016 00:00:00 +0800</pubDate><link>http://localhost:4000/mybatis/MyBatis-With-Spring/</link> <guid isPermaLink="true">http://localhost:4000/mybatis/MyBatis-With-Spring/</guid> <category>mybatis</category> <category>spring</category> <category>MyBatis</category> </item> <item><title>MyBatis association collection and discriminator</title> <description>&lt;p&gt;Quick note about MyBatis association, collection and discriminator.&lt;/p&gt;&lt;h2 id="association"&gt;association&lt;/h2&gt;&lt;p&gt;&lt;code class="highlighter-rouge"&gt;&amp;lt;association&amp;gt;&lt;/code&gt; deals with a “has-one” type relationship. For example, in our example, an Author has an User account with username and password:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;userName&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;// Getters and Setters&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Author&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;realName&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;IDCard&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// In DB, author table has a foreign key userID refering id in user table&lt;/span&gt; &lt;span class="c1"&gt;// Getters and Setters&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;And in xml map file, we need to define result Map of &lt;code class="highlighter-rouge"&gt;Author&lt;/code&gt;:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;resultMap&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"AuthorMap"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"Author"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- author.id is tableName.id which is used to be distinguished from user.id --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;id&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"author.id"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"realName"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"realName"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"IDCard"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"IDCard"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;association&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"user"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"userID"&lt;/span&gt; &lt;span class="na"&gt;javaType=&lt;/span&gt;&lt;span class="s"&gt;"User"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;id&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"user.id"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"userName"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"userName"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/association&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/resultMap&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;select&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"selectAuthorJoin"&lt;/span&gt; &lt;span class="na"&gt;resultMap=&lt;/span&gt;&lt;span class="s"&gt;"AuthorMap"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; select * from author inner join user on user.id = author.userID &lt;span class="nt"&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;We could also extract User information as another individual resultMap which could be re-used:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;resultMap&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"AuthorMap"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"Author"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; ... &lt;span class="nt"&gt;&amp;lt;association&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"user"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"userID"&lt;/span&gt; &lt;span class="na"&gt;javaType=&lt;/span&gt;&lt;span class="s"&gt;"User"&lt;/span&gt; &lt;span class="na"&gt;resultMap=&lt;/span&gt;&lt;span class="s"&gt;"userMap"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/resultMap&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;resultMap&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"userMap"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"User"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;id&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"userName"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"userName"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/resultMap&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;To query by java:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;userList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;selectList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"selectAuthorJoin"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h3 id="constructor"&gt;Constructor&lt;/h3&gt;&lt;p&gt;If we do not care about user id or some other property. We could use &lt;code class="highlighter-rouge"&gt;&amp;lt;constructor&amp;gt;&lt;/code&gt; to limit what we want based on constructors of object.&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;User&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;User&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;userName&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;userName&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;resultMap&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"AuthorMapByConstructor"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"Author"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;id&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"author.id"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"realName"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"realName"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"IDCard"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"IDCard"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;association&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"user"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"userID"&lt;/span&gt; &lt;span class="na"&gt;javaType=&lt;/span&gt;&lt;span class="s"&gt;"User"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;constructor&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;arg&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"userName"&lt;/span&gt; &lt;span class="na"&gt;javaType=&lt;/span&gt;&lt;span class="s"&gt;"String"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;arg&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;javaType=&lt;/span&gt;&lt;span class="s"&gt;"String"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/constructor&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/association&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/resultMap&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;select&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"selectAuthorJoin"&lt;/span&gt; &lt;span class="na"&gt;resultMap=&lt;/span&gt;&lt;span class="s"&gt;"AuthorMapByConstructor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; select * from author inner join user on user.id = author.userID &lt;span class="nt"&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h3 id="subquery"&gt;Subquery&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Subquery/Inner query/Nested query is a query within another SQL query and embedded within the WHERE clause&lt;/strong&gt;.&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;userID&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;So there are in fact two statements here. Let’s define each select statement and resultMap:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;resultMap&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"AuthorSubMap"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"Author"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;id&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"author.id"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"realName"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"realName"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"IDCard"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"IDCard"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;association&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"user"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"userID"&lt;/span&gt; &lt;span class="na"&gt;javaType=&lt;/span&gt;&lt;span class="s"&gt;"User"&lt;/span&gt; &lt;span class="na"&gt;select=&lt;/span&gt;&lt;span class="s"&gt;"findById"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/resultMap&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;select&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"findById"&lt;/span&gt; &lt;span class="na"&gt;parameterType=&lt;/span&gt;&lt;span class="s"&gt;"int"&lt;/span&gt; &lt;span class="na"&gt;resultType=&lt;/span&gt;&lt;span class="s"&gt;"User"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; select * from user where id=#{id} &lt;span class="nt"&gt;&amp;lt;/select&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;select&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"selectAuthorSub"&lt;/span&gt; &lt;span class="na"&gt;resultMap=&lt;/span&gt;&lt;span class="s"&gt;"AuthorSubMap"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; select * from author &lt;span class="nt"&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;In the above settings, &lt;code class="highlighter-rouge"&gt;&amp;lt;association&amp;gt;&lt;/code&gt; will pass &lt;code class="highlighter-rouge"&gt;userID&lt;/code&gt; as parameter to &lt;code class="highlighter-rouge"&gt;findById&lt;/code&gt;.&lt;/p&gt;&lt;h4 id="n1-problem"&gt;N+1 problem&lt;/h4&gt;&lt;p&gt;But think about we have 10 authors, so here findById will be called 10 times! So we need to call 10 + 1 statements. It’s called “N+1” problem of subquery. Many people think it’s not as good as join query.&lt;/p&gt;&lt;h4 id="solution"&gt;Solution&lt;/h4&gt;&lt;p&gt;The solution is lazy load. &lt;strong&gt;Statement will be not queried until the point at which it is needed&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;Let’s firstly find differences between subquery and join query.&lt;/p&gt;&lt;ul&gt; &lt;li&gt;Join query: Query one time. But it gets all the properties of two table, so it consumes resources.&lt;/li&gt; &lt;li&gt;Subquery: Query N+1 times. It depends on what we want in the final result. With lazy loading, we may not need to make N times queries if not necessary.&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;To set lazy loading in configuration file, &lt;strong&gt;this setting must be in front of others&lt;/strong&gt;:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;settings&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;setting&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"lazyLoadingEnabled"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;setting&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"aggressiveLazyLoading"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;To test:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;authorList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;selectList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"selectAuthorSub"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Author&lt;/span&gt; &lt;span class="nl"&gt;author:&lt;/span&gt;&lt;span class="n"&gt;authorList&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;auther&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getRealName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Lazyloading"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// findById query will not be called until getUser() is invoked. It's lazy loading here.&lt;/span&gt; &lt;span class="c1"&gt;// If we never call getUser(), so findById will also never be called&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;auther&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getUser&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getUserName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;So here with lazy loading, if we never need to call &lt;code class="highlighter-rouge"&gt;getUser()&lt;/code&gt;, it only queries one time which is efficient!&lt;/p&gt;&lt;h2 id="collection"&gt;collection&lt;/h2&gt;&lt;p&gt;&lt;code class="highlighter-rouge"&gt;&amp;lt;collection&amp;gt;&lt;/code&gt; element works almost identically to &lt;code class="highlighter-rouge"&gt;&amp;lt;association&amp;gt;&lt;/code&gt;. But it is used to map a set of nested results like List.&lt;/p&gt;&lt;p&gt;In the following example, each User could have a list of visitors:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;userName&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Visitor&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;visitorList&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;// Getters and Setters&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Visitor&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;visitID&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;Date&lt;/span&gt; &lt;span class="n"&gt;visitDate&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;visitIP&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;// Getters and Setters&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;Then in xml map file, we use &lt;code class="highlighter-rouge"&gt;&amp;lt;collection&amp;gt;&lt;/code&gt; to indicate that list of visits.&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;resultMap&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"visitMap"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"User"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;id&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"userName"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"userName"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- `ofType` indicates the containing type of ArrayList --&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;collection&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"visitorList"&lt;/span&gt; &lt;span class="na"&gt;javaType=&lt;/span&gt;&lt;span class="s"&gt;"ArrayList"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"visitID"&lt;/span&gt; &lt;span class="na"&gt;ofType=&lt;/span&gt;&lt;span class="s"&gt;"Visitor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"visitID"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"visitID"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"visitIP"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"visitIP"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"visitDate"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"visitDate"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/collection&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/resultMap&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;select&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"selectVisit"&lt;/span&gt; &lt;span class="na"&gt;resultMap=&lt;/span&gt;&lt;span class="s"&gt;"visitMap"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; select * from user inner join visitor on user.id = visit.userID &lt;span class="nt"&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;p&gt;To test:&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;userList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;selectList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"selectVisit"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="nl"&gt;user:&lt;/span&gt;&lt;span class="n"&gt;userList&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getUserName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Visitor&lt;/span&gt; &lt;span class="nl"&gt;visitor:&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getVisitorList&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;visitor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getVisitDate&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;visitor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getVisitIP&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="discriminator"&gt;discriminator&lt;/h2&gt;&lt;p&gt;A single database query might return result sets of many different data types. So here &lt;code class="highlighter-rouge"&gt;&amp;lt;discriminator&amp;gt;&lt;/code&gt; is used to &lt;strong&gt;determine which data types or so-called resultMap to use according to a column value&lt;/strong&gt;. It is like &lt;code class="highlighter-rouge"&gt;switch&lt;/code&gt; in other programming languages.&lt;/p&gt;&lt;p&gt;The following resultMap will return different data types according to value of &lt;code class="highlighter-rouge"&gt;vehicle_type&lt;/code&gt;.&lt;/p&gt;&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span class="nt"&gt;&amp;lt;resultMap&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"vehicleResult"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"Vehicle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;id&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; ... &lt;span class="nt"&gt;&amp;lt;discriminator&lt;/span&gt; &lt;span class="na"&gt;javaType=&lt;/span&gt;&lt;span class="s"&gt;"int"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"vehicle_type"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;case&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt; &lt;span class="na"&gt;resultType=&lt;/span&gt;&lt;span class="s"&gt;"carResult"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"doorCount"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"door_count"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/case&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;case&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;resultType=&lt;/span&gt;&lt;span class="s"&gt;"truckResult"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"boxSize"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"box_size"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"extendedCab"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"extended_cab"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/case&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;case&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"3"&lt;/span&gt; &lt;span class="na"&gt;resultType=&lt;/span&gt;&lt;span class="s"&gt;"suvResult"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;result&lt;/span&gt; &lt;span class="na"&gt;property=&lt;/span&gt;&lt;span class="s"&gt;"allWheelDrive"&lt;/span&gt; &lt;span class="na"&gt;column=&lt;/span&gt;&lt;span class="s"&gt;"all_wheel_drive"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/case&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/discriminator&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/resultMap&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;h2 id="refs"&gt;Refs&lt;/h2&gt;&lt;ul&gt; &lt;li&gt;&lt;a href="http://www.mybatis.org/mybatis-3/index.html"&gt;Mybatis doc refs&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://jiuye.jikexueyuan.com/play?id=924&amp;amp;class_id=36"&gt;极客学院-MyBatis 高级查询&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; </description> <pubDate>Sun, 17 Apr 2016 00:00:00 +0800</pubDate><link>http://localhost:4000/mybatis/MyBatis-Advanced/</link> <guid isPermaLink="true">http://localhost:4000/mybatis/MyBatis-Advanced/</guid> <category>mybatis</category> <category>MyBatis</category> </item> </channel> </rss>